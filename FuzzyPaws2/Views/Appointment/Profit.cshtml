@model AppointmentsIndexViewModel
@{
    string getMonthName(int monthNr)
    {
        if (monthNr == 1)
            return "January";
        if (monthNr == 2)
            return "February";
        if (monthNr == 3)
            return "March";
        if (monthNr == 4)
            return "April";
        if (monthNr == 5)
            return "May";
        if (monthNr == 6)
            return "June";
        if (monthNr == 7)
            return "July";
        if (monthNr == 8)
            return "August";
        if (monthNr == 9)
            return "September";
        if (monthNr == 10)
            return "October";
        if (monthNr == 11)
            return "November";
        if (monthNr == 12)
            return "December";

        return "";
    }
}

<h1 class = "text-success">
    All-time profit: @(Model.AllAppointments.Where(x => x.FinalPrice > 0).Sum(b => b.FinalPrice))$
</h1>
<div class="row">
    <div class="col-md-12 text-end">
        <button class="btn btn-outline-success" type="button">
            @Html.ActionLink("Create PDF for finished appointments", "CreatePdf", "Appointment", null)
        </button>
    </div>
</div>
<br />
@*<p>    
    Profit in July: @(Model.AllAppointments.Where(x => x.Time.Month == 7).Sum(b => b.FinalPrice))$
</p>

<p>    
    Profit in June: @(Model.AllAppointments.Where(x => x.Time.Month == 6).Sum(b => b.FinalPrice))$
</p>
*@
<h3> Profit by Months: </h3>

@{
    int i = 1;

}
@while( i < DateTime.Now.Month + 1)
{
       <h6 class="text-success">
           @(getMonthName(i)): @(Model.AllAppointments.Where(x => x.Time.Month == i).Sum(b => b.FinalPrice))$
       </h6>
    for(int d = 1; d < 31; d++)
    {
            @if (Model.AllAppointments.Where(x => x.Time.Month == i &&
                                             x.Time.Day == d)
                                      .Sum(b => b.FinalPrice) != 0) 
                 {
                         <li>
                             @(getMonthName(i)) @(d): @(Model.AllAppointments
                                     .Where(x => x.Time.Month == i &&
                                                 x.Time.Day == d)
                                     .Sum(b => b.FinalPrice))$
                         </li>
                 }
        
    };
    i++;
}

<br />
